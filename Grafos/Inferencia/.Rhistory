library(bnlearn)
library(Rgraphviz)
#dag<-dag(bn)
dag<-model2network("[A][S][E|A:S][O|E][R|E][T|O:R]")
graphviz.plot(dag)
path.exists(dag,from='S',to='R')
dsep(dag,from='S',to='R')
dsep(dag,x='S',y='R')
path.exists(dag,from='S',to='R')
graphviz.plot(dag)
path.exists(dag,from="A",to="S")
dsep(dag, x="A",y="S")
dsep(dag, x="A",y="S",z="E")
dsep(dag, x="O",y="R",z="E")
library(gRain)
load("BNsurvey.RData")
jt <- compile(as.grain(bn)) # bn esta generada con la libreria bnlearn y necesitamos convertirla a gRain
plot(jt)
ftable(bn$T$prob,col.vars = 1)
ftable(bn$T$prob,col.vars = 1)
# P(T)
querygrain(jt,nodes=c('T'),type='marginal')
# P(T)
querygrain(jt,nodes=c('T'),type='marginal')
querygrain(jt,nodes=c('T'),type='joint')
querygrain(jt,nodes=c('T','S'),type='condicional')
querygrain(jt,nodes=c('T','S'),type='conditional')
querygrain(jt,nodes=c('T','R'),type='conditional')
jt.SF <- setEvidence(jt,nodes='S',states='F') # cambiamos el junction tree para que las consultas las devuelva solo para mujeres
querygrain(jt.SF,nodes=c('T'),type='marginal')
jt.SF <- setEvidence(jt,nodes='S',states='F') # cambiamos el junction tree para que las consultas las devuelva solo para mujeres
querygrain(jt.SF,nodes=c('T'),type='marginal')
jt.Rsmall <- setEvidence(jt,nodes='R',states='small')
querygrain(jt.Rsmall,nodes=c('T'),type='marginal')
jt.Ehigh <- setEvidence(jt,nodes='E',states='high')
querygrain(jt.Rsmall,nodes=c('S','T'),type='joint')
jt.Ehigh <- setEvidence(jt,nodes='E',states='high')
querygrain(jt.Ehigh,nodes=c('S','T'),type='joint')
querygrain(jt.Ehigh,nodes='S',type='joint')
jt.TE <- setEvidence(jt,nodes=c('T','E'),states=c('train','high'))
querygrain(jt.TE,nodes='S',type='joint')
jt.TE <- setEvidence(jt,nodes=c('T','E'),states=c('train','high'))
querygrain(jt.TE,nodes='S',type='marginal')==querygrain(jt.Ehigh,nodes='S',type='marginal')
jt.TE <- setEvidence(jt,nodes=c('T','E'),states=c('train','high'))
querygrain(jt.TE,nodes='S',type='joint')==querygrain(jt.Ehigh,nodes='S',type='joint')
jt.TE <- setEvidence(jt,nodes=c('T','E'),states=c('train','high'))
querygrain(jt.TE,nodes='S',type='joint')==querygrain(jt.Ehigh,nodes='S',type='marginal')
querygrain(jt.Ehigh,nodes='S',type='joint')
querygrain(jt.TE,nodes='S',type='joint')
querygrain(jt.Ehigh,nodes='S',type='marginal')
querygrain(jt.TE,nodes='S',type='joint')==querygrain(jt.Ehigh,nodes='S',type='marginal')
querygrain(jt.TE,nodes='S',type='joint')
querygrain(jt.Ehigh,nodes='S',type='marginal')
querygrain(jt.Ehigh,nodes=c('T','S'),type='conditional')
options(digits = 3)
library(bnlearn)
dag<-model2network("[A][S][E|A:S][O|E][R|E][T|O:R]")
graphviz.plot(dag)
survey <- read,table('survey.txt',header=True,stringsAsFactors = T)
library(bnlearn)
dag<-model2network("[A][S][E|A:S][O|E][R|E][T|O:R]")
graphviz.plot(dag)
survey <- read,table('survey.txt',header=T,stringsAsFactors = T)
survey <- read.table('survey.txt',header=T,stringsAsFactors = T)
library(bnlearn)
dag<-model2network("[A][S][E|A:S][O|E][R|E][T|O:R]")
graphviz.plot(dag)
survey <- read.table('survey.txt',header=T,stringsAsFactors = T)
survey <- read.table('survey.txt',header=T,stringsAsFactors = T)
library(bnlearn)
dag<-model2network("[A][S][E|A:S][O|E][R|E][T|O:R]")
graphviz.plot(dag)
library(readr)
survey <- read_table("survey.txt")
