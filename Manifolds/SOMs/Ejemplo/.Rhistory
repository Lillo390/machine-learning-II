knitr::opts_chunk$set(echo = TRUE)
library(aweSOM)
library(aweSOM)
data("iris")
full.data <- iris
train.data <- full.data[, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")]
train.data <- scale(train.data)
cor_matrix<-cor(train.data)
print(cor_matrix)
e<-eigen(cor_matrix)
print(e[1])
### RNG Seed (for reproducibility)
set.seed(1465)
### Initialization (PCA grid)
init <- somInit(train.data, 12, 6)
## Train SOM
# alpha = learning_rate (learning rate, a vector of two numbers indicating the amount of change.
# rlen = the number of times the complete data set will be presented to the network.
# radius = the radius of the neighbourhood, either given as a single number or a vector (start, stop).
# dist.fcts = vector of distance functions to be used for the individual data layer.
iris.som <- kohonen::som(train.data, grid = kohonen::somgrid(12, 6, "rectangular"),
rlen = 100, alpha = c(0.05, 0.01), radius = c(2.65,-2.65),
dist.fcts = "sumofsquares", init = init)
num <- somQuality(iris.som, train.data)
print(num$err.quant)
print(num$err.kaski)
print(num$err.topo)
print(num$err.varratio)
aweSOMplot(som = iris.som, type = "Cloud", data = full.data,
variables = c("Species", "Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam)
superclust_pam <- cluster::pam(iris.som$codes[[1]], 3)
superclasses_pam <- superclust_pam$clustering
superclust_hclust <- hclust(dist(iris.som$codes[[1]]), "complete")
superclasses_hclust <- cutree(superclust_hclust, 3)
superclust_pam <- cluster::pam(iris.som$codes[[1]], 3)
superclasses_pam <- superclust_pam$clustering
superclust_hclust <- hclust(dist(iris.som$codes[[1]]), "complete")
superclasses_hclust <- cutree(superclust_hclust, 3)
aweSOMplot(som = iris.som, type = "Cloud", data = full.data,
variables = c("Species", "Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
library(aweSOM)
data("iris")
full.data <- iris
train.data <- full.data[, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")]
train.data <- scale(train.data)
cor_matrix<-cor(train.data)
print(cor_matrix)
e<-eigen(cor_matrix)
print(e[1])
### RNG Seed (for reproducibility)
set.seed(1465)
### Initialization (PCA grid)
init <- somInit(train.data, 12, 6)
## Train SOM
# alpha = learning_rate (learning rate, a vector of two numbers indicating the amount of change.
# rlen = the number of times the complete data set will be presented to the network.
# radius = the radius of the neighbourhood, either given as a single number or a vector (start, stop).
# dist.fcts = vector of distance functions to be used for the individual data layer.
iris.som <- kohonen::som(train.data, grid = kohonen::somgrid(12, 6, "rectangular"),
rlen = 100, alpha = c(0.05, 0.01), radius = c(2.65,-2.65),
dist.fcts = "sumofsquares", init = init)
num <- somQuality(iris.som, train.data)
print(num$err.quant)
print(num$err.kaski)
print(num$err.topo)
print(num$err.varratio)
superclust_pam <- cluster::pam(iris.som$codes[[1]], 3)
superclasses_pam <- superclust_pam$clustering
superclust_hclust <- hclust(dist(iris.som$codes[[1]]), "complete")
superclasses_hclust <- cutree(superclust_hclust, 3)
aweSOMplot(som = iris.som, type = "Cloud", data = full.data,
variables = c("Species", "Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
library(aweSOM)
data("iris")
full.data <- iris
train.data <- full.data[, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")]
train.data <- scale(train.data)
cor_matrix<-cor(train.data)
print(cor_matrix)
e<-eigen(cor_matrix)
print(e[1])
### RNG Seed (for reproducibility)
set.seed(1465)
### Initialization (PCA grid)
init <- somInit(train.data, 12, 6)
## Train SOM
# alpha = learning_rate (learning rate, a vector of two numbers indicating the amount of change.
# rlen = the number of times the complete data set will be presented to the network.
# radius = the radius of the neighbourhood, either given as a single number or a vector (start, stop).
# dist.fcts = vector of distance functions to be used for the individual data layer.
iris.som <- kohonen::som(train.data, grid = kohonen::somgrid(12, 6, "rectangular"),
rlen = 100, alpha = c(0.05, 0.01), radius = c(2.65,-2.65),
dist.fcts = "sumofsquares", init = init)
num <- somQuality(iris.som, train.data)
print(num$err.quant)
print(num$err.kaski)
print(num$err.topo)
print(num$err.varratio)
superclust_pam <- cluster::pam(iris.som$codes[[1]], 3)
superclasses_pam <- superclust_pam$clustering
superclust_hclust <- hclust(dist(iris.som$codes[[1]]), "complete")
superclasses_hclust <- cutree(superclust_hclust, 3)
aweSOMplot(som = iris.som, type = "Cloud", data = full.data,
variables = c("Species", "Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam)
superclust_pam <- cluster::pam(iris.som$codes[[1]], 3)
superclasses_pam <- superclust_pam$clustering
superclust_hclust <- hclust(dist(iris.som$codes[[1]]), "complete")
superclasses_hclust <- cutree(superclust_hclust, 3)
aweSOMplot(som = iris.som, type = "Cloud", data = full.data,
variables = c("Species", "Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam)
aweSOMplot(som = iris.som, type = "Hitmap", superclass = superclasses_pam)
aweSOMplot(som = iris.som, type = "UMatrix", superclass = superclasses_pam)
aweSOMsmoothdist(iris.som)
aweSOMplot(som = iris.som, type = "Circular", data = full.data,
variables = c("Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam)
aweSOMplot(som = iris.som, type = "Barplot", data = full.data,
variables = c("Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam,
values = "prototypes")
aweSOMplot(som = iris.som, type = "Boxplot", data = full.data,
variables = c("Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam,
scales = "same")
aweSOMplot(som = iris.som, type = "Line", data = full.data,
variables = c("Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam,
values = "median")
aweSOMplot(som = iris.som, type = "Radar", data = full.data,
variables = c("Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam)
aweSOMplot(som = iris.som, type = "Color", data = full.data,
variables = "Sepal.Length", superclass = superclasses_pam)
aweSOMplot(som = iris.som, type = "CatBarplot", data = full.data,
variables = "Species", superclass = superclasses_pam)
aweSOMplot(som = iris.som, type = "Pie", data = full.data, variables = "Species",
superclass = superclasses_pam)
superclust_pam <- cluster::pam(iris.som$codes[[1]], 3)
superclasses_pam <- superclust_pam$clustering
superclust_hclust <- hclust(dist(iris.som$codes[[1]]), "complete")
superclasses_hclust <- cutree(superclust_hclust, 3)
superclust_pam <- cluster::pam(iris.som$codes[[1]], 3)
superclasses_pam <- superclust_pam$clustering
superclust_hclust <- hclust(dist(iris.som$codes[[1]]), "complete")
superclasses_hclust <- cutree(superclust_hclust, 3)
aweSOMplot(som = iris.som, type = "Cloud", data = full.data,
variables = c("Species", "Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam)
aweSOMplot(som = iris.som, type = "Cloud", data = full.data,
variables = c("Species", "Sepal.Length", "Sepal.Width",
"Petal.Length", "Petal.Width"),
superclass = superclasses_pam)
aweSOMscreeplot(som = iris.som, method = "pam", nclass = 3)
aweSOMsilhouette(iris.som, superclasses_pam)
aweSOMdendrogram(clust = superclust_hclust, nclass = 3)
